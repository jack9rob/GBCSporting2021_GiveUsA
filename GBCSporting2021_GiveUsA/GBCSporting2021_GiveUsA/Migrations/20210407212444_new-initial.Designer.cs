// <auto-generated />
using System;
using GBCSporting2021_GiveUsA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GBCSporting2021_GiveUsA.Migrations
{
    [DbContext(typeof(TechnicalSupportContext))]
    [Migration("20210407212444_new-initial")]
    partial class newinitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = "CAD",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = "USA",
                            Name = "United States of America"
                        },
                        new
                        {
                            CountryId = "KOR",
                            Name = "Korea"
                        },
                        new
                        {
                            CountryId = "OTHER",
                            Name = "Other"
                        },
                        new
                        {
                            CountryId = "AUS",
                            Name = "Australia"
                        },
                        new
                        {
                            CountryId = "MEX",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryId = "UK",
                            Name = "United Kingdom"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "123 Home Drive",
                            City = "Toronto",
                            CountryId = "CAD",
                            Email = "jack.robinson@gmail.com",
                            Firstname = "Jack",
                            Lastname = "Robinson",
                            Phone = "123-456-7899",
                            Postalcode = "M4B 1G5",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "123 Home Drive",
                            City = "Toronto",
                            CountryId = "MEX",
                            Email = "fatih@gmail.com",
                            Firstname = "Fatih",
                            Lastname = "Com",
                            Phone = "123-456-7899",
                            Postalcode = "M4B 1G5",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "123 Home Drive",
                            City = "Toronto",
                            CountryId = "AUS",
                            Email = "jack.robinson@gmail.com",
                            Firstname = "Young-il",
                            Lastname = "Kim",
                            Phone = "123-456-7899",
                            Postalcode = "M4B 1G5",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 8,
                            Address = "Bloor 87",
                            City = "Toronto",
                            CountryId = "CAD",
                            Email = "afafa82@gmail.com",
                            Firstname = "Bruce",
                            Lastname = "Wayne",
                            Phone = "416-123-4567",
                            Postalcode = "M4A Y2Y",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 15,
                            Address = "Sariro 52",
                            City = "Seoul",
                            CountryId = "KOR",
                            Email = "afafa1234@gmail.com",
                            Firstname = "Youngil",
                            Lastname = "Kim",
                            Phone = "647-689-5682",
                            Postalcode = "213566",
                            Province = "Seoul"
                        },
                        new
                        {
                            CustomerId = 10,
                            Address = "Query 58",
                            City = "Mexico City",
                            CountryId = "MEX",
                            Email = "hana25@gmail.com",
                            Firstname = "Haley",
                            Lastname = "Lee",
                            Phone = "263-589-1254",
                            Postalcode = "H3E Y2H",
                            Province = "State of Mexico"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "Bont 81",
                            City = "Tokyo",
                            CountryId = "OTHER",
                            Email = "kelly82@gmail.com",
                            Firstname = "Kelly",
                            Lastname = "Doll",
                            Phone = "416-265-1478",
                            Postalcode = "215368",
                            Province = "Tokyo-to"
                        },
                        new
                        {
                            CustomerId = 13,
                            Address = "Bont 81",
                            City = "New York City",
                            CountryId = "USA",
                            Email = "payne12@gmail.com",
                            Firstname = "Payne",
                            Lastname = "Crue",
                            Phone = "416-697-2145",
                            Postalcode = "K9K H3M",
                            Province = "New York"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentId = 1,
                            CustomerId = 1,
                            DateOpened = new DateTime(2021, 4, 7, 17, 24, 43, 702, DateTimeKind.Local).AddTicks(2295),
                            Description = "Alex smashed by macbook because he was too jealous",
                            ProductId = 1,
                            TechnicianId = 1,
                            Title = "Macbook broke"
                        },
                        new
                        {
                            IncidentId = 2,
                            CustomerId = 2,
                            DateOpened = new DateTime(2021, 4, 7, 17, 24, 43, 702, DateTimeKind.Local).AddTicks(4601),
                            Description = "Coffee spilled all over me",
                            ProductId = 2,
                            TechnicianId = 3,
                            Title = "Coffe spill"
                        },
                        new
                        {
                            IncidentId = 3,
                            CustomerId = 3,
                            DateOpened = new DateTime(2021, 4, 7, 17, 24, 43, 702, DateTimeKind.Local).AddTicks(4651),
                            Description = "Wrong yoga mat was delivered to me",
                            ProductId = 3,
                            TechnicianId = 3,
                            Title = "Yoga mat is wrong colour"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Code = "MAC-AIR-M1",
                            Name = "Macbook Air M1",
                            Price = 1200.0,
                            ReleaseDate = new DateTime(2021, 4, 7, 17, 24, 43, 697, DateTimeKind.Local).AddTicks(6328)
                        },
                        new
                        {
                            ProductId = 2,
                            Code = "BLK-COF",
                            Name = "Black Coffee",
                            Price = 2.5,
                            ReleaseDate = new DateTime(2021, 4, 7, 17, 24, 43, 701, DateTimeKind.Local).AddTicks(5174)
                        },
                        new
                        {
                            ProductId = 3,
                            Code = "yoga-mat",
                            Name = "Yoga Mat",
                            Price = 10.0,
                            ReleaseDate = new DateTime(2021, 4, 7, 17, 24, 43, 701, DateTimeKind.Local).AddTicks(5230)
                        });
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechnicianId = 1,
                            Email = "Yoon@email.com",
                            Name = "Alex Yoon",
                            Phone = "647-347-3345"
                        },
                        new
                        {
                            TechnicianId = 2,
                            Email = "doe@hotmail.com",
                            Name = "John Doe",
                            Phone = "416-774-5412"
                        },
                        new
                        {
                            TechnicianId = 3,
                            Email = "janster@gmail.com",
                            Name = "Jane Doe",
                            Phone = "122-458-4775"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Customer", b =>
                {
                    b.HasOne("GBCSporting2021_GiveUsA.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting2021_GiveUsA.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_GiveUsA.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_GiveUsA.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");
                });

            modelBuilder.Entity("GBCSporting2021_GiveUsA.Models.Registration", b =>
                {
                    b.HasOne("GBCSporting2021_GiveUsA.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_GiveUsA.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
